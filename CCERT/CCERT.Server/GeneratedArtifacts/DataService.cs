//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseItems_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseItems_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseItems_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseItems_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseItems_Inserting(global::LightSwitchApplication.ExpenseItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseItems_Inserted(global::LightSwitchApplication.ExpenseItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseItems_Updating(global::LightSwitchApplication.ExpenseItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseItems_Updated(global::LightSwitchApplication.ExpenseItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseItems_Deleting(global::LightSwitchApplication.ExpenseItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseItems_Deleted(global::LightSwitchApplication.ExpenseItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseItems_Validate(global::LightSwitchApplication.ExpenseItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseItems_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ExpenseItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseReports_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseReports_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseReports_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseReports_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseReports_Inserting(global::LightSwitchApplication.ExpenseReport entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseReports_Inserted(global::LightSwitchApplication.ExpenseReport entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseReports_Updating(global::LightSwitchApplication.ExpenseReport entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseReports_Updated(global::LightSwitchApplication.ExpenseReport entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseReports_Deleting(global::LightSwitchApplication.ExpenseReport entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseReports_Deleted(global::LightSwitchApplication.ExpenseReport entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseReports_Validate(global::LightSwitchApplication.ExpenseReport entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseReports_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ExpenseReport, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseReportsForUser_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ExpenseReportsForUser_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpenseReportsForUser_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.ExpenseReport> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ExpenseReportsForUser_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ExpenseReport> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ExpenseReportsForUser_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ExpenseItem>
                __ExpenseItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ExpenseItem>(
                    "ExpenseItems",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseItems_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseItems_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseItems_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseItems_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseItems_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseItems_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseItems_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseItems_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseItems_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseItems_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseItems_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseItems_Filter);
            private static bool __ExpenseItems_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ExpenseItems_CanInsert(ref result);
                return result;
            }
            private static bool __ExpenseItems_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ExpenseItems_CanUpdate(ref result);
                return result;
            }
            private static bool __ExpenseItems_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ExpenseItems_CanDelete(ref result);
                return result;
            }
            private static bool __ExpenseItems_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ExpenseItems_CanRead(ref result);
                return result;
            }
            private static void __ExpenseItems_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ExpenseItem e)
            {
                d.ExpenseItems_Inserting(e);
            }
            private static void __ExpenseItems_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ExpenseItem e)
            {
                d.ExpenseItems_Inserted(e);
            }
            private static void __ExpenseItems_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ExpenseItem e)
            {
                d.ExpenseItems_Updating(e);
            }
            private static void __ExpenseItems_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ExpenseItem e)
            {
                d.ExpenseItems_Updated(e);
            }
            private static void __ExpenseItems_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ExpenseItem e)
            {
                d.ExpenseItems_Deleting(e);
            }
            private static void __ExpenseItems_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ExpenseItem e)
            {
                d.ExpenseItems_Deleted(e);
            }
            private static void __ExpenseItems_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ExpenseItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ExpenseItems_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ExpenseItem, bool>> __ExpenseItems_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ExpenseItem, bool>> filter = null;
                d.ExpenseItems_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ExpenseReport>
                __ExpenseReportsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ExpenseReport>(
                    "ExpenseReports",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseReports_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseReports_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseReports_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseReports_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseReports_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseReports_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseReports_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseReports_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseReports_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseReports_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseReports_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseReports_Filter);
            private static bool __ExpenseReports_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ExpenseReports_CanInsert(ref result);
                return result;
            }
            private static bool __ExpenseReports_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ExpenseReports_CanUpdate(ref result);
                return result;
            }
            private static bool __ExpenseReports_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ExpenseReports_CanDelete(ref result);
                return result;
            }
            private static bool __ExpenseReports_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ExpenseReports_CanRead(ref result);
                return result;
            }
            private static void __ExpenseReports_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ExpenseReport e)
            {
                d.ExpenseReports_Inserting(e);
            }
            private static void __ExpenseReports_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ExpenseReport e)
            {
                d.ExpenseReports_Inserted(e);
            }
            private static void __ExpenseReports_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ExpenseReport e)
            {
                d.ExpenseReports_Updating(e);
            }
            private static void __ExpenseReports_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ExpenseReport e)
            {
                d.ExpenseReports_Updated(e);
            }
            private static void __ExpenseReports_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ExpenseReport e)
            {
                d.ExpenseReports_Deleting(e);
            }
            private static void __ExpenseReports_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ExpenseReport e)
            {
                d.ExpenseReports_Deleted(e);
            }
            private static void __ExpenseReports_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ExpenseReport e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ExpenseReports_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ExpenseReport, bool>> __ExpenseReports_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ExpenseReport, bool>> filter = null;
                d.ExpenseReports_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ExpenseReport>
                __ExpenseReportsForUserEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ExpenseReport>(
                    "ExpenseReportsForUser",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseReportsForUser_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseReportsForUser_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseReportsForUser_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseReportsForUser_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ExpenseReportsForUser_PreprocessQuery);
            private static bool __ExpenseReportsForUser_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ExpenseReportsForUser_CanExecute(ref r);
                return r;
            }
            private static void __ExpenseReportsForUser_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ExpenseReportsForUser_Executing();
            }
            private static void __ExpenseReportsForUser_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ExpenseReportsForUser_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ExpenseReport>)args[0]);
            }
            private static void __ExpenseReportsForUser_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ExpenseReportsForUser_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ExpenseReportsForUser_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ExpenseReport> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ExpenseReport>)args[0];
                d.ExpenseReportsForUser_PreprocessQuery(ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
